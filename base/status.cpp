#include "status.hpp"

#include <cstring>

namespace simon {

bool PosixStatusDomain::has_equivalent_condition_of(
    StatusCode incident, StatusCode other) const noexcept {
  return false;
}

bool PosixStatusDomain::has_equivalent_condition_of(
    StatusCode incident, StatusCondition condition) const noexcept {
  return false;
}

bool Win32StatusDomain::has_equivalent_condition_of(
    StatusCode incident, StatusCode other) const noexcept {
  return false;
}

bool Win32StatusDomain::has_equivalent_condition_of(
    StatusCode incident, StatusCondition condition) const noexcept {
  return false;
}

template <>
const std::array<impl::ConditionEntry, impl::POSIX_CONDITION_COUNT>
    EnumStatusDomain<PosixCondition, impl::POSIX_CONDITION_COUNT>::conditions_ =
        {
            impl::ConditionEntry{"Argument list too long."},
            impl::ConditionEntry{"Permission denied."},
            impl::ConditionEntry{"Address in use."},
            impl::ConditionEntry{"Address not available."},
            impl::ConditionEntry{"Address family not supported."},
            impl::ConditionEntry{"Resource unavailable}, try again."},
            impl::ConditionEntry{"Connection already in progress."},
            impl::ConditionEntry{"Bad file descriptor."},
            impl::ConditionEntry{"Bad message."},
            impl::ConditionEntry{"Device or resource busy."},
            impl::ConditionEntry{"Operation canceled."},
            impl::ConditionEntry{"No child processes."},
            impl::ConditionEntry{"Connection aborted."},
            impl::ConditionEntry{"Connection refused."},
            impl::ConditionEntry{"Connection reset."},
            impl::ConditionEntry{"Resource deadlock would occur."},
            impl::ConditionEntry{"Destination address required."},
            impl::ConditionEntry{
                "Mathematics argument out of domain of function."},
            impl::ConditionEntry{"Reserved."},  //
            impl::ConditionEntry{"File exists."},
            impl::ConditionEntry{"Bad address."},
            impl::ConditionEntry{"File too large."},
            impl::ConditionEntry{"Host is unreachable."},
            impl::ConditionEntry{"Identifier removed."},
            impl::ConditionEntry{"Illegal byte sequence."},
            impl::ConditionEntry{"Operation in progress."},
            impl::ConditionEntry{"Interrupted function."},
            impl::ConditionEntry{"Invalid argument."},
            impl::ConditionEntry{"I/O error."},
            impl::ConditionEntry{"Socket is connected."},
            impl::ConditionEntry{"Is a directory."},
            impl::ConditionEntry{"Too many levels of symbolic links."},
            impl::ConditionEntry{"File descriptor value too large."},
            impl::ConditionEntry{"Too many links."},
            impl::ConditionEntry{"Message too large."},
            impl::ConditionEntry{"Reserved."},
            impl::ConditionEntry{"Filename too long."},
            impl::ConditionEntry{"Network is down."},
            impl::ConditionEntry{"Connection aborted by network."},
            impl::ConditionEntry{"Network unreachable."},
            impl::ConditionEntry{"Too many files open in system."},
            impl::ConditionEntry{"No buffer space available."},
            impl::ConditionEntry{
                "No message is available on the STREAM head read queue."},
            impl::ConditionEntry{"No such device."},
            impl::ConditionEntry{"No such file or directory."},
            impl::ConditionEntry{"Executable file format error."},
            impl::ConditionEntry{"No locks available."},
            impl::ConditionEntry{"Reserved."},
            impl::ConditionEntry{"Not enough space."},
            impl::ConditionEntry{"No message of the desired type."},
            impl::ConditionEntry{"Protocol not available."},
            impl::ConditionEntry{"No space left on device."},
            impl::ConditionEntry{"No STREAM resources."},
            impl::ConditionEntry{"Not a STREAM. "},
            impl::ConditionEntry{"Functionality not supported."},
            impl::ConditionEntry{"The socket is not connected."},
            impl::ConditionEntry{
                "Not a directory or a symbolic link to a directory."},
            impl::ConditionEntry{"Directory not empty."},
            impl::ConditionEntry{"State not recoverable."},
            impl::ConditionEntry{"Not a socket."},
            impl::ConditionEntry{"Not supported."},
            impl::ConditionEntry{"Inappropriate I/O control operation."},
            impl::ConditionEntry{"No such device or address."},
            impl::ConditionEntry{"Operation not supported on socket."},
            impl::ConditionEntry{"Value too large to be stored in data type."},
            impl::ConditionEntry{"Previous owner died."},
            impl::ConditionEntry{"Operation not permitted."},
            impl::ConditionEntry{"Broken pipe."},
            impl::ConditionEntry{"Protocol error."},
            impl::ConditionEntry{"Protocol not supported."},
            impl::ConditionEntry{"Protocol wrong type for socket."},
            impl::ConditionEntry{"Result too large."},
            impl::ConditionEntry{"Read-only file system."},
            impl::ConditionEntry{"Invalid seek."},
            impl::ConditionEntry{"No such process."},
            impl::ConditionEntry{"Reserved."},
            impl::ConditionEntry{"Stream ioctl() timeout."},
            impl::ConditionEntry{"Connection timed out."},
            impl::ConditionEntry{"Text file busy."},
            impl::ConditionEntry{"Operation would block."},
            impl::ConditionEntry{"Cross-device link."},
};

template <>
const std::array<impl::ConditionEntry, impl::WIN32_CONDITION_COUNT>
    EnumStatusDomain<Win32Condition, impl::WIN32_CONDITION_COUNT>::conditions_ =
        {
            impl::ConditionEntry{"ERROR_INVALID_FUNCTION"},
            impl::ConditionEntry{"ERROR_FILE_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_PATH_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_TOO_MANY_OPEN_FILES"},
            impl::ConditionEntry{"ERROR_ACCESS_DENIED"},
            impl::ConditionEntry{"ERROR_INVALID_HANDLE"},
            impl::ConditionEntry{"ERROR_ARENA_TRASHED"},
            impl::ConditionEntry{"ERROR_NOT_ENOUGH_MEMORY"},
            impl::ConditionEntry{"ERROR_INVALID_BLOCK"},
            impl::ConditionEntry{"ERROR_BAD_ENVIRONMENT"},
            impl::ConditionEntry{"ERROR_BAD_FORMAT"},
            impl::ConditionEntry{"ERROR_INVALID_ACCESS"},
            impl::ConditionEntry{"ERROR_INVALID_DATA"},
            impl::ConditionEntry{"ERROR_OUTOFMEMORY"},
            impl::ConditionEntry{"ERROR_INVALID_DRIVE"},
            impl::ConditionEntry{"ERROR_CURRENT_DIRECTORY"},
            impl::ConditionEntry{"ERROR_NOT_SAME_DEVICE"},
            impl::ConditionEntry{"ERROR_NO_MORE_FILES"},
            impl::ConditionEntry{"ERROR_WRITE_PROTECT"},
            impl::ConditionEntry{"ERROR_BAD_UNIT"},
            impl::ConditionEntry{"ERROR_NOT_READY"},
            impl::ConditionEntry{"ERROR_BAD_COMMAND"},
            impl::ConditionEntry{"ERROR_CRC"},
            impl::ConditionEntry{"ERROR_BAD_LENGTH"},
            impl::ConditionEntry{"ERROR_SEEK"},
            impl::ConditionEntry{"ERROR_NOT_DOS_DISK"},
            impl::ConditionEntry{"ERROR_SECTOR_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_OUT_OF_PAPER"},
            impl::ConditionEntry{"ERROR_WRITE_FAULT"},
            impl::ConditionEntry{"ERROR_READ_FAULT"},
            impl::ConditionEntry{"ERROR_GEN_FAILURE"},
            impl::ConditionEntry{"ERROR_SHARING_VIOLATION"},
            impl::ConditionEntry{"ERROR_LOCK_VIOLATION"},
            impl::ConditionEntry{"ERROR_WRONG_DISK"},
            impl::ConditionEntry{"ERROR_SHARING_BUFFER_EXCEEDED"},
            impl::ConditionEntry{"ERROR_HANDLE_EOF"},
            impl::ConditionEntry{"ERROR_HANDLE_DISK_FULL"},
            impl::ConditionEntry{"ERROR_NOT_SUPPORTED"},
            impl::ConditionEntry{"ERROR_REM_NOT_LIST"},
            impl::ConditionEntry{"ERROR_DUP_NAME"},
            impl::ConditionEntry{"ERROR_BAD_NETPATH"},
            impl::ConditionEntry{"ERROR_NETWORK_BUSY"},
            impl::ConditionEntry{"ERROR_DEV_NOT_EXIST"},
            impl::ConditionEntry{"ERROR_TOO_MANY_CMDS"},
            impl::ConditionEntry{"ERROR_ADAP_HDW_ERR"},
            impl::ConditionEntry{"ERROR_BAD_NET_RESP"},
            impl::ConditionEntry{"ERROR_UNEXP_NET_ERR"},
            impl::ConditionEntry{"ERROR_BAD_REM_ADAP"},
            impl::ConditionEntry{"ERROR_PRINTQ_FULL"},
            impl::ConditionEntry{"ERROR_NO_SPOOL_SPACE"},
            impl::ConditionEntry{"ERROR_PRINT_CANCELED"},
            impl::ConditionEntry{"ERROR_NETNAME_DELETED"},
            impl::ConditionEntry{"ERROR_NETWORK_ACCESS_DENIED"},
            impl::ConditionEntry{"ERROR_BAD_DEV_TYPE"},
            impl::ConditionEntry{"ERROR_BAD_NET_NAME"},
            impl::ConditionEntry{"ERROR_TOO_MANY_NAMES"},
            impl::ConditionEntry{"ERROR_TOO_MANY_SESS"},
            impl::ConditionEntry{"ERROR_SHARING_PAUSED"},
            impl::ConditionEntry{"ERROR_REQ_NOT_ACCEP"},
            impl::ConditionEntry{"ERROR_REDIR_PAUSED"},
            impl::ConditionEntry{"ERROR_FILE_EXISTS"},
            impl::ConditionEntry{"ERROR_CANNOT_MAKE"},
            impl::ConditionEntry{"ERROR_FAIL_I24"},
            impl::ConditionEntry{"ERROR_OUT_OF_STRUCTURES"},
            impl::ConditionEntry{"ERROR_ALREADY_ASSIGNED"},
            impl::ConditionEntry{"ERROR_INVALID_PASSWORD"},
            impl::ConditionEntry{"ERROR_INVALID_PARAMETER"},
            impl::ConditionEntry{"ERROR_NET_WRITE_FAULT"},
            impl::ConditionEntry{"ERROR_NO_PROC_SLOTS"},
            impl::ConditionEntry{"ERROR_TOO_MANY_SEMAPHORES"},
            impl::ConditionEntry{"ERROR_EXCL_SEM_ALREADY_OWNED"},
            impl::ConditionEntry{"ERROR_SEM_IS_SET"},
            impl::ConditionEntry{"ERROR_TOO_MANY_SEM_REQUESTS"},
            impl::ConditionEntry{"ERROR_INVALID_AT_INTERRUPT_TIME"},
            impl::ConditionEntry{"ERROR_SEM_OWNER_DIED"},
            impl::ConditionEntry{"ERROR_SEM_USER_LIMIT"},
            impl::ConditionEntry{"ERROR_DISK_CHANGE"},
            impl::ConditionEntry{"ERROR_DRIVE_LOCKED"},
            impl::ConditionEntry{"ERROR_BROKEN_PIPE"},
            impl::ConditionEntry{"ERROR_OPEN_FAILED"},
            impl::ConditionEntry{"ERROR_BUFFER_OVERFLOW"},
            impl::ConditionEntry{"ERROR_DISK_FULL"},
            impl::ConditionEntry{"ERROR_NO_MORE_SEARCH_HANDLES"},
            impl::ConditionEntry{"ERROR_INVALID_TARGET_HANDLE"},
            impl::ConditionEntry{"ERROR_INVALID_CATEGORY"},
            impl::ConditionEntry{"ERROR_INVALID_VERIFY_SWITCH"},
            impl::ConditionEntry{"ERROR_BAD_DRIVER_LEVEL"},
            impl::ConditionEntry{"ERROR_CALL_NOT_IMPLEMENTED"},
            impl::ConditionEntry{"ERROR_SEM_TIMEOUT"},
            impl::ConditionEntry{"ERROR_INSUFFICIENT_BUFFER"},
            impl::ConditionEntry{"ERROR_INVALID_NAME"},
            impl::ConditionEntry{"ERROR_INVALID_LEVEL"},
            impl::ConditionEntry{"ERROR_NO_VOLUME_LABEL"},
            impl::ConditionEntry{"ERROR_MOD_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_PROC_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_WAIT_NO_CHILDREN"},
            impl::ConditionEntry{"ERROR_CHILD_NOT_COMPLETE"},
            impl::ConditionEntry{"ERROR_DIRECT_ACCESS_HANDLE"},
            impl::ConditionEntry{"ERROR_NEGATIVE_SEEK"},
            impl::ConditionEntry{"ERROR_SEEK_ON_DEVICE"},
            impl::ConditionEntry{"ERROR_IS_JOIN_TARGET"},
            impl::ConditionEntry{"ERROR_IS_JOINED"},
            impl::ConditionEntry{"ERROR_IS_SUBSTED"},
            impl::ConditionEntry{"ERROR_NOT_JOINED"},
            impl::ConditionEntry{"ERROR_NOT_SUBSTED"},
            impl::ConditionEntry{"ERROR_JOIN_TO_JOIN"},
            impl::ConditionEntry{"ERROR_SUBST_TO_SUBST"},
            impl::ConditionEntry{"ERROR_JOIN_TO_SUBST"},
            impl::ConditionEntry{"ERROR_SUBST_TO_JOIN"},
            impl::ConditionEntry{"ERROR_BUSY_DRIVE"},
            impl::ConditionEntry{"ERROR_SAME_DRIVE"},
            impl::ConditionEntry{"ERROR_DIR_NOT_ROOT"},
            impl::ConditionEntry{"ERROR_DIR_NOT_EMPTY"},
            impl::ConditionEntry{"ERROR_IS_SUBST_PATH"},
            impl::ConditionEntry{"ERROR_IS_JOIN_PATH"},
            impl::ConditionEntry{"ERROR_PATH_BUSY"},
            impl::ConditionEntry{"ERROR_IS_SUBST_TARGET"},
            impl::ConditionEntry{"ERROR_SYSTEM_TRACE"},
            impl::ConditionEntry{"ERROR_INVALID_EVENT_COUNT"},
            impl::ConditionEntry{"ERROR_TOO_MANY_MUXWAITERS"},
            impl::ConditionEntry{"ERROR_INVALID_LIST_FORMAT"},
            impl::ConditionEntry{"ERROR_LABEL_TOO_LONG"},
            impl::ConditionEntry{"ERROR_TOO_MANY_TCBS"},
            impl::ConditionEntry{"ERROR_SIGNAL_REFUSED"},
            impl::ConditionEntry{"ERROR_DISCARDED"},
            impl::ConditionEntry{"ERROR_NOT_LOCKED"},
            impl::ConditionEntry{"ERROR_BAD_THREADID_ADDR"},
            impl::ConditionEntry{"ERROR_BAD_ARGUMENTS"},
            impl::ConditionEntry{"ERROR_BAD_PATHNAME"},
            impl::ConditionEntry{"ERROR_SIGNAL_PENDING"},
            impl::ConditionEntry{"ERROR_MAX_THRDS_REACHED"},
            impl::ConditionEntry{"ERROR_LOCK_FAILED"},
            impl::ConditionEntry{"ERROR_BUSY"},
            impl::ConditionEntry{"ERROR_CANCEL_VIOLATION"},
            impl::ConditionEntry{"ERROR_ATOMIC_LOCKS_NOT_SUPPORTED"},
            impl::ConditionEntry{"ERROR_INVALID_SEGMENT_NUMBER"},
            impl::ConditionEntry{"ERROR_INVALID_ORDINAL"},
            impl::ConditionEntry{"ERROR_ALREADY_EXISTS"},
            impl::ConditionEntry{"ERROR_INVALID_FLAG_NUMBER"},
            impl::ConditionEntry{"ERROR_SEM_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_INVALID_STARTING_CODESEG"},
            impl::ConditionEntry{"ERROR_INVALID_STACKSEG"},
            impl::ConditionEntry{"ERROR_INVALID_MODULETYPE"},
            impl::ConditionEntry{"ERROR_INVALID_EXE_SIGNATURE"},
            impl::ConditionEntry{"ERROR_EXE_MARKED_INVALID"},
            impl::ConditionEntry{"ERROR_BAD_EXE_FORMAT"},
            impl::ConditionEntry{"ERROR_ITERATED_DATA_EXCEEDS_64k"},
            impl::ConditionEntry{"ERROR_INVALID_MINALLOCSIZE"},
            impl::ConditionEntry{"ERROR_DYNLINK_FROM_INVALID_RING"},
            impl::ConditionEntry{"ERROR_IOPL_NOT_ENABLED"},
            impl::ConditionEntry{"ERROR_INVALID_SEGDPL"},
            impl::ConditionEntry{"ERROR_AUTODATASEG_EXCEEDS_64k"},
            impl::ConditionEntry{"ERROR_RING2SEG_MUST_BE_MOVABLE"},
            impl::ConditionEntry{"ERROR_RELOC_CHAIN_XEEDS_SEGLIM"},
            impl::ConditionEntry{"ERROR_INFLOOP_IN_RELOC_CHAIN"},
            impl::ConditionEntry{"ERROR_ENVVAR_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_NO_SIGNAL_SENT"},
            impl::ConditionEntry{"ERROR_FILENAME_EXCED_RANGE"},
            impl::ConditionEntry{"ERROR_RING2_STACK_IN_USE"},
            impl::ConditionEntry{"ERROR_META_EXPANSION_TOO_LONG"},
            impl::ConditionEntry{"ERROR_INVALID_SIGNAL_NUMBER"},
            impl::ConditionEntry{"ERROR_THREAD_1_INACTIVE"},
            impl::ConditionEntry{"ERROR_LOCKED"},
            impl::ConditionEntry{"ERROR_TOO_MANY_MODULES"},
            impl::ConditionEntry{"ERROR_NESTING_NOT_ALLOWED"},
            impl::ConditionEntry{"ERROR_EXE_MACHINE_TYPE_MISMATCH"},
            impl::ConditionEntry{"ERROR_BAD_PIPE"},
            impl::ConditionEntry{"ERROR_PIPE_BUSY"},
            impl::ConditionEntry{"ERROR_NO_DATA"},
            impl::ConditionEntry{"ERROR_PIPE_NOT_CONNECTED"},
            impl::ConditionEntry{"ERROR_MORE_DATA"},
            impl::ConditionEntry{"ERROR_VC_DISCONNECTED"},
            impl::ConditionEntry{"ERROR_INVALID_EA_NAME"},
            impl::ConditionEntry{"ERROR_EA_LIST_INCONSISTENT"},
            impl::ConditionEntry{"WAIT_TIMEOUT"},
            impl::ConditionEntry{"ERROR_NO_MORE_ITEMS"},
            impl::ConditionEntry{"ERROR_CANNOT_COPY"},
            impl::ConditionEntry{"ERROR_DIRECTORY"},
            impl::ConditionEntry{"ERROR_EAS_DIDNT_FIT"},
            impl::ConditionEntry{"ERROR_EA_FILE_CORRUPT"},
            impl::ConditionEntry{"ERROR_EA_TABLE_FULL"},
            impl::ConditionEntry{"ERROR_INVALID_EA_HANDLE"},
            impl::ConditionEntry{"ERROR_EAS_NOT_SUPPORTED"},
            impl::ConditionEntry{"ERROR_NOT_OWNER"},
            impl::ConditionEntry{"ERROR_TOO_MANY_POSTS"},
            impl::ConditionEntry{"ERROR_PARTIAL_COPY"},
            impl::ConditionEntry{"ERROR_OPLOCK_NOT_GRANTED"},
            impl::ConditionEntry{"ERROR_INVALID_OPLOCK_PROTOCOL"},
            impl::ConditionEntry{"ERROR_MR_MID_NOT_FOUND"},
            impl::ConditionEntry{"ERROR_INVALID_ADDRESS"},
            impl::ConditionEntry{"ERROR_ARITHMETIC_OVERFLOW"},
            impl::ConditionEntry{"ERROR_PIPE_CONNECTED"},
            impl::ConditionEntry{"ERROR_PIPE_LISTENING"},
            impl::ConditionEntry{"ERROR_EA_ACCESS_DENIED"},
            impl::ConditionEntry{"ERROR_OPERATION_ABORTED"},
            impl::ConditionEntry{"ERROR_IO_INCOMPLETE"},
            impl::ConditionEntry{"ERROR_IO_PENDING"},
            impl::ConditionEntry{"ERROR_NOACCESS"},
            impl::ConditionEntry{"ERROR_SWAPERROR"},
};

}  // namespace simon
